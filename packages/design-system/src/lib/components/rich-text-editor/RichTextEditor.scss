@use 'sass:color';
@import 'src/lib/assets/styles/design-tokens/colors.module';

.rich-text-editor-wrapper {
  display: flex;
  flex-direction: column;
  padding-top: 0.5rem;
  border: solid 1px $dv-border-color;
  border-radius: 6px;

  &:focus,
  &:focus-within {
    border-color: color.adjust($dv-primary-color, $alpha: -0.4);
    outline: 0;
    box-shadow: 0 0 0 0.25rem color.adjust($dv-primary-color, $alpha: -0.75);
  }

  .editor-content-wrapper {
    display: flex;
    flex: 1;
    flex-direction: column;

    .rich-text-editor-content {
      flex: 1;
      min-height: 200px;
      max-height: 350px;
      margin: 0.5rem;
      padding: 6px 12px;
      overflow-y: auto;
      border: solid 1px $dv-border-color;
      border-radius: 4px;
      resize: vertical;

      &[style*='height'] {
        max-height: unset;
      }

      &.ProseMirror-focused {
        border-color: color.adjust($dv-primary-color, $alpha: -0.4);
        outline: 0;
        box-shadow: 0 0 0 0.25rem color.adjust($dv-primary-color, $alpha: -0.75);
      }

      p.is-editor-empty:first-child::before {
        float: left;
        height: 0;
        color: #adb5bd;
        content: attr(data-placeholder);
        pointer-events: none;
      }

      .image-resize-container {
        position: relative;
        cursor: pointer;

        &:has(.img-alignment-controller) {
          border: 2px dashed $dv-primary-color;
        }

        .img-alignment-controller {
          position: absolute;
          top: 0%;
          left: 50%;
          z-index: 999;
          display: inline-flex;
          vertical-align: middle;
          transform: translateX(-50%);
          cursor: pointer;

          button {
            background-color: $dv-secondary-color;
            border: 1px solid #ccc;
            outline: 0;
            cursor: pointer;

            &:hover {
              background-color: color.adjust($dv-secondary-color, $lightness: 3%);
            }

            &:active {
              background-color: color.adjust($dv-secondary-color, $lightness: -6%);
            }

            &:first-child {
              border-right: 0;
              border-radius: 0.25rem;
              border-top-right-radius: 0;
              border-bottom-right-radius: 0;
            }

            &:last-child {
              border-left: 0;
              border-radius: 0.25rem;
              border-top-left-radius: 0;
              border-bottom-left-radius: 0;
            }
          }
        }

        .resize-dot {
          width: 12px;
          height: 12px;
          background-color: $dv-secondary-color;
          border-radius: 3px;
          outline: solid 2px $dv-primary-color;

          &.mobile {
            width: 16px;
            height: 16px;
          }
        }

        &.rte-img-left {
          margin-right: auto;
          margin-left: 0;
        }

        &.rte-img-center {
          margin-right: auto;
          margin-left: auto;
        }

        &.rte-img-right {
          margin-right: 0;
          margin-left: auto;
        }
      }
    }
  }

  &.invalid {
    border-color: $dv-danger-color;

    &:focus-within,
    &:focus {
      border-color: color.adjust($dv-danger-color, $alpha: -0.4);
      outline: 0;
      box-shadow: 0 0 0 0.25rem color.adjust($dv-danger-color, $alpha: -0.7);
    }

    .editor-content-wrapper .rich-text-editor-content {
      border-color: $dv-danger-color;

      &.ProseMirror-focused {
        border-color: color.adjust($dv-danger-color, $alpha: -0.4);
        outline: 0;
        box-shadow: 0 0 0 0.25rem color.adjust($dv-danger-color, $alpha: -0.9);
      }
    }
  }
}
